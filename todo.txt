- compiling the following code generates incorrect jump address (only in listing?) 

	./compile.lua --optimize --mcode -l inline.lst test/inline.f 

	: inl begin 1 again ; inline
	: main inl ;

	main:
	3c5c df              rst 24              ; adjust stack for machine code
	3c5d d7              rst 16              ; inlined inl
	3c5e 11 01 00        ld de,$0001
	3c61 18 fa           jr $3c5c            ; again		<-- *** incorrect jump address in listing? ***
	3c63 c9              ret

- forward gotos could be optimized to branches

- relocate inlined machine code

- dead code and inlining optimizations can't distinguish words that have same name
	- therefore the compiler does not really support defining multiple words with same name
	-> raise an error when a word is redefined and document the behavior in README

- document remaining words in README

- can we make machine code version of . any faster (it's really slow)?
	- yes, write specializations for base 10 and base 16?
	- https://wikiti.brandonw.net/index.php?title=Z80_Routines:Other:DispHL

- BUG: errors and warnings have incorrect line number for words at the end of the line
	- store last_word_line in next_symbol

- formatting of negative literals in listing files is broken

- refactor BYTES and ;BYTES into defining word (BYTES 1 2 3 4 5 6 ;)

- dead code and inlining optimizations can't distinguish words that have same name
	- therefore the compiler does not really support defining multiple words with same name
	-> raise an error when a word is redefined and document the behavior in README

- if 2DUP is used in the program code and when compiling machine code, two versions of 2DUP are generated in the compiled code
	- the first one is 2DUP subroutine
	- the second one is library code
	- dead code elimination cannot distinguish between them
	-> rename subroutines so that they don't use same names are regular words

- can we support inlining for machine code words?
	- yes, but we need to relocate the compiled code (patch all absolute jumps and string references)

- document remaining words in README

- can we make machine code version of . any faster (it's really slow)?

- BUG: errors and warnings have incorrect line number for words at the end of the line
	- store last_word_line in next_symbol

- formatting of negative literals in listing files is broken
